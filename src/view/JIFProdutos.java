package view;

import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.*;
import data.*;
import utils.*;
import javax.swing.text.PlainDocument;

public class JIFProdutos extends javax.swing.JInternalFrame {

    Campos campos;
    Paineis paineis;
    Produto produto;
    ProdutoDAO DAO;
    
    public JIFProdutos() {
        initComponents();
        
        //Filtro que impossibilita os campos jtfCodigo, jtfMultiplo e jtfQuantidade recebam caracteres que não sejam números, 
        PlainDocument docCodigo = (PlainDocument) jtfCodigo.getDocument();
        docCodigo.setDocumentFilter(new FiltroDigitos());
        PlainDocument docMultiplo = (PlainDocument) jtfMultiplo.getDocument();
        docMultiplo.setDocumentFilter(new FiltroDigitos());
        PlainDocument docQuantidade = (PlainDocument) jtfQuantidade.getDocument();
        docQuantidade.setDocumentFilter(new FiltroDigitos());
        
        try {
            campos = new Campos();
            paineis = new Paineis();
            produto = new Produto();
            DAO = new ProdutoDAO();
        } catch (Exception e) {
            System.out.println("Erro ao inicializar instância de " + e.getMessage());
        }

        //Inicia todos os campos de forma correta.
        campos.componentsClearText(jpCentro);
        campos.componentsSetEditable(jpCentro, false);
        paineis.componentsSetVisible(jpSul, false);
        jlCodigo.setVisible(false);
        jtfCodigo.setVisible(false);
        jpBotaoAdicionar.setVisible(true);
        jpBotaoPesquisar.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jpNorte = new javax.swing.JPanel();
        ImageIcon iconBotaoFechar = new ImageIcon(getClass().getResource("/images/Comum/BotaoFechar.png"));
        Image botaoFechar = iconBotaoFechar.getImage();
        jpFechar = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(botaoFechar, 0, 0, getWidth(), getHeight(), this);
            }
        };
        jpCentro = new javax.swing.JPanel();
        jlCodigo = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jlNome = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jlReferencia = new javax.swing.JLabel();
        jtfReferencia = new javax.swing.JTextField();
        jlMarca = new javax.swing.JLabel();
        jtfMarca = new javax.swing.JTextField();
        jlPesquisa = new javax.swing.JLabel();
        jtfPesquisa = new javax.swing.JTextField();
        jlDescricao = new javax.swing.JLabel();
        jtfDescricao = new javax.swing.JTextField();
        jlPreco = new javax.swing.JLabel();
        jtfPreco = new javax.swing.JTextField();
        jlMultiplo = new javax.swing.JLabel();
        jtfMultiplo = new javax.swing.JTextField();
        jlQuantidade = new javax.swing.JLabel();
        jtfQuantidade = new javax.swing.JTextField();
        jpSul = new javax.swing.JPanel();
        ImageIcon iconBotaoAdicionar = new ImageIcon(getClass().getResource("/images/Comum/BotaoAdicionar.png"));
        Image botaoAdicionar = iconBotaoAdicionar.getImage();
        jpBotaoAdicionar = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(botaoAdicionar, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconBotaoPesquisar = new ImageIcon(getClass().getResource("/images/Comum/BotaoPesquisar.png"));
        Image botaoPesquisar = iconBotaoPesquisar.getImage();
        jpBotaoPesquisar = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(botaoPesquisar, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconBotaoEditar = new ImageIcon(getClass().getResource("/images/Comum/BotaoEditar.png"));
        Image botaoEditar = iconBotaoEditar.getImage();
        jpBotaoEditar = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(botaoEditar, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconBotaoDeletar = new ImageIcon(getClass().getResource("/images/Comum/BotaoDeletar.png"));
        Image botaoDeletar = iconBotaoDeletar.getImage();
        jpBotaoDeletar = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(botaoDeletar, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconBotaoVerificar = new ImageIcon(getClass().getResource("/images/Comum/BotaoVerificar.png"));
        Image botaoVerificar = iconBotaoVerificar.getImage();
        jpBotaoVerificar = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(botaoVerificar, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconBotaoCancelar = new ImageIcon(getClass().getResource("/images/Comum/BotaoCancelar.png"));
        Image botaoCancelar = iconBotaoCancelar.getImage();
        jpBotaoCancelar = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(botaoCancelar, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconBotaoSalvar = new ImageIcon(getClass().getResource("/images/Comum/BotaoSalvar.png"));
        Image botaoSalvar = iconBotaoSalvar.getImage();
        jpBotaoSalvar = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(botaoSalvar, 0, 0, getWidth(), getHeight(), this);
            }
        };

        setBorder(null);
        setFrameIcon(null);
        setPreferredSize(new java.awt.Dimension(1152, 720));

        jpNorte.setBackground(new java.awt.Color(255, 109, 0));
        jpNorte.setPreferredSize(new java.awt.Dimension(1102, 38));
        jpNorte.setLayout(new java.awt.GridBagLayout());

        jpFechar.setBackground(new java.awt.Color(255, 0, 0));
        jpFechar.setPreferredSize(new java.awt.Dimension(38, 38));
        jpFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpFecharMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpFecharMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpFecharMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jpNorte.add(jpFechar, gridBagConstraints);

        getContentPane().add(jpNorte, java.awt.BorderLayout.NORTH);

        jpCentro.setBackground(new java.awt.Color(255, 209, 0));
        jpCentro.setLayout(new java.awt.GridBagLayout());

        jlCodigo.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jlCodigo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlCodigo.setText("Código:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        jpCentro.add(jlCodigo, gridBagConstraints);

        jtfCodigo.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jtfCodigo.setToolTipText("");
        jtfCodigo.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        jpCentro.add(jtfCodigo, gridBagConstraints);

        jlNome.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jlNome.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlNome.setText("Nome:");
        jlNome.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        jpCentro.add(jlNome, gridBagConstraints);

        jtfNome.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jtfNome.setToolTipText("");
        jtfNome.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        jpCentro.add(jtfNome, gridBagConstraints);

        jlReferencia.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jlReferencia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlReferencia.setText("Referência:");
        jlReferencia.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        jpCentro.add(jlReferencia, gridBagConstraints);

        jtfReferencia.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jtfReferencia.setToolTipText("");
        jtfReferencia.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        jpCentro.add(jtfReferencia, gridBagConstraints);

        jlMarca.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jlMarca.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlMarca.setText("Marca:");
        jlMarca.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        jpCentro.add(jlMarca, gridBagConstraints);

        jtfMarca.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jtfMarca.setToolTipText("");
        jtfMarca.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        jpCentro.add(jtfMarca, gridBagConstraints);

        jlPesquisa.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jlPesquisa.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlPesquisa.setText("Pesquisa:");
        jlPesquisa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        jpCentro.add(jlPesquisa, gridBagConstraints);

        jtfPesquisa.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jtfPesquisa.setToolTipText("");
        jtfPesquisa.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        jpCentro.add(jtfPesquisa, gridBagConstraints);

        jlDescricao.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jlDescricao.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlDescricao.setText("Descrição:");
        jlDescricao.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        jpCentro.add(jlDescricao, gridBagConstraints);

        jtfDescricao.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jtfDescricao.setToolTipText("");
        jtfDescricao.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        jpCentro.add(jtfDescricao, gridBagConstraints);

        jlPreco.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jlPreco.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlPreco.setText("Preço:");
        jlPreco.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        jpCentro.add(jlPreco, gridBagConstraints);

        jtfPreco.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jtfPreco.setToolTipText("");
        jtfPreco.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        jpCentro.add(jtfPreco, gridBagConstraints);

        jlMultiplo.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jlMultiplo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlMultiplo.setText("Múltiplo:");
        jlMultiplo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        jpCentro.add(jlMultiplo, gridBagConstraints);

        jtfMultiplo.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jtfMultiplo.setToolTipText("");
        jtfMultiplo.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        jpCentro.add(jtfMultiplo, gridBagConstraints);

        jlQuantidade.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jlQuantidade.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlQuantidade.setText("Quantidade:");
        jlQuantidade.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        jpCentro.add(jlQuantidade, gridBagConstraints);

        jtfQuantidade.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jtfQuantidade.setToolTipText("");
        jtfQuantidade.setPreferredSize(new java.awt.Dimension(400, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        jpCentro.add(jtfQuantidade, gridBagConstraints);

        getContentPane().add(jpCentro, java.awt.BorderLayout.CENTER);

        jpSul.setBackground(new java.awt.Color(255, 109, 0));
        jpSul.setMinimumSize(new java.awt.Dimension(1152, 70));
        jpSul.setPreferredSize(new java.awt.Dimension(1152, 70));

        jpBotaoAdicionar.setBackground(new java.awt.Color(41, 98, 255));
        jpBotaoAdicionar.setMaximumSize(new java.awt.Dimension(60, 60));
        jpBotaoAdicionar.setMinimumSize(new java.awt.Dimension(50, 50));
        jpBotaoAdicionar.setPreferredSize(new java.awt.Dimension(60, 60));
        jpBotaoAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpBotaoAdicionarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpBotaoAdicionarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpBotaoAdicionarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpBotaoAdicionarLayout = new javax.swing.GroupLayout(jpBotaoAdicionar);
        jpBotaoAdicionar.setLayout(jpBotaoAdicionarLayout);
        jpBotaoAdicionarLayout.setHorizontalGroup(
            jpBotaoAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        jpBotaoAdicionarLayout.setVerticalGroup(
            jpBotaoAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jpSul.add(jpBotaoAdicionar);

        jpBotaoPesquisar.setBackground(new java.awt.Color(41, 98, 255));
        jpBotaoPesquisar.setMaximumSize(new java.awt.Dimension(60, 60));
        jpBotaoPesquisar.setMinimumSize(new java.awt.Dimension(50, 50));
        jpBotaoPesquisar.setPreferredSize(new java.awt.Dimension(60, 60));
        jpBotaoPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpBotaoPesquisarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpBotaoPesquisarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpBotaoPesquisarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpBotaoPesquisarLayout = new javax.swing.GroupLayout(jpBotaoPesquisar);
        jpBotaoPesquisar.setLayout(jpBotaoPesquisarLayout);
        jpBotaoPesquisarLayout.setHorizontalGroup(
            jpBotaoPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        jpBotaoPesquisarLayout.setVerticalGroup(
            jpBotaoPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jpSul.add(jpBotaoPesquisar);

        jpBotaoEditar.setBackground(new java.awt.Color(41, 98, 255));
        jpBotaoEditar.setMaximumSize(new java.awt.Dimension(60, 60));
        jpBotaoEditar.setMinimumSize(new java.awt.Dimension(50, 50));
        jpBotaoEditar.setPreferredSize(new java.awt.Dimension(60, 60));
        jpBotaoEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpBotaoEditarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpBotaoEditarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpBotaoEditarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpBotaoEditarLayout = new javax.swing.GroupLayout(jpBotaoEditar);
        jpBotaoEditar.setLayout(jpBotaoEditarLayout);
        jpBotaoEditarLayout.setHorizontalGroup(
            jpBotaoEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        jpBotaoEditarLayout.setVerticalGroup(
            jpBotaoEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jpSul.add(jpBotaoEditar);

        jpBotaoDeletar.setBackground(new java.awt.Color(41, 98, 255));
        jpBotaoDeletar.setMaximumSize(new java.awt.Dimension(60, 60));
        jpBotaoDeletar.setMinimumSize(new java.awt.Dimension(50, 50));
        jpBotaoDeletar.setPreferredSize(new java.awt.Dimension(60, 60));
        jpBotaoDeletar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpBotaoDeletarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpBotaoDeletarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpBotaoDeletarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpBotaoDeletarLayout = new javax.swing.GroupLayout(jpBotaoDeletar);
        jpBotaoDeletar.setLayout(jpBotaoDeletarLayout);
        jpBotaoDeletarLayout.setHorizontalGroup(
            jpBotaoDeletarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        jpBotaoDeletarLayout.setVerticalGroup(
            jpBotaoDeletarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jpSul.add(jpBotaoDeletar);

        jpBotaoVerificar.setBackground(new java.awt.Color(41, 98, 255));
        jpBotaoVerificar.setToolTipText("");
        jpBotaoVerificar.setMaximumSize(new java.awt.Dimension(60, 60));
        jpBotaoVerificar.setMinimumSize(new java.awt.Dimension(50, 50));
        jpBotaoVerificar.setPreferredSize(new java.awt.Dimension(60, 60));
        jpBotaoVerificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpBotaoVerificarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpBotaoVerificarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpBotaoVerificarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpBotaoVerificarLayout = new javax.swing.GroupLayout(jpBotaoVerificar);
        jpBotaoVerificar.setLayout(jpBotaoVerificarLayout);
        jpBotaoVerificarLayout.setHorizontalGroup(
            jpBotaoVerificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        jpBotaoVerificarLayout.setVerticalGroup(
            jpBotaoVerificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jpSul.add(jpBotaoVerificar);

        jpBotaoCancelar.setBackground(new java.awt.Color(41, 98, 255));
        jpBotaoCancelar.setMaximumSize(new java.awt.Dimension(60, 60));
        jpBotaoCancelar.setMinimumSize(new java.awt.Dimension(50, 50));
        jpBotaoCancelar.setPreferredSize(new java.awt.Dimension(60, 60));
        jpBotaoCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpBotaoCancelarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpBotaoCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpBotaoCancelarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpBotaoCancelarLayout = new javax.swing.GroupLayout(jpBotaoCancelar);
        jpBotaoCancelar.setLayout(jpBotaoCancelarLayout);
        jpBotaoCancelarLayout.setHorizontalGroup(
            jpBotaoCancelarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        jpBotaoCancelarLayout.setVerticalGroup(
            jpBotaoCancelarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jpSul.add(jpBotaoCancelar);

        jpBotaoSalvar.setBackground(new java.awt.Color(41, 98, 255));
        jpBotaoSalvar.setToolTipText("");
        jpBotaoSalvar.setMaximumSize(new java.awt.Dimension(60, 60));
        jpBotaoSalvar.setMinimumSize(new java.awt.Dimension(50, 50));
        jpBotaoSalvar.setPreferredSize(new java.awt.Dimension(60, 60));
        jpBotaoSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpBotaoSalvarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpBotaoSalvarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpBotaoSalvarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpBotaoSalvarLayout = new javax.swing.GroupLayout(jpBotaoSalvar);
        jpBotaoSalvar.setLayout(jpBotaoSalvarLayout);
        jpBotaoSalvarLayout.setHorizontalGroup(
            jpBotaoSalvarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        jpBotaoSalvarLayout.setVerticalGroup(
            jpBotaoSalvarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jpSul.add(jpBotaoSalvar);

        getContentPane().add(jpSul, java.awt.BorderLayout.SOUTH);

        setBounds(0, 0, 1152, 720);
    }// </editor-fold>//GEN-END:initComponents

    private void jpFecharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpFecharMouseClicked
        if(JOptionPane.showConfirmDialog(this, "Deseja realmente fechar?", "Produtos", 0) == 0) {
            dispose();
        }
    }//GEN-LAST:event_jpFecharMouseClicked

    private void jpFecharMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpFecharMouseEntered
        jpFechar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(245, 124, 0), 2, false));
    }//GEN-LAST:event_jpFecharMouseEntered

    private void jpFecharMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpFecharMouseExited
        jpFechar.setBorder(new javax.swing.border.EmptyBorder(0, 0, 0, 0));
    }//GEN-LAST:event_jpFecharMouseExited

    private void jpBotaoAdicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoAdicionarMouseClicked
        //Tudo editável, para que se possa adicionar.
        campos.componentsSetEditable(jpCentro, true);

        //Limita todos os botões, exceto o "Cancelar" e o "Salvar".
        paineis.componentsSetVisible(jpSul, false);
        jpBotaoCancelar.setVisible(true);
        jpBotaoSalvar.setVisible(true);
    }//GEN-LAST:event_jpBotaoAdicionarMouseClicked

    private void jpBotaoAdicionarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoAdicionarMouseEntered
        paineis.componentSetLineBorderColor(jpBotaoAdicionar);
    }//GEN-LAST:event_jpBotaoAdicionarMouseEntered

    private void jpBotaoAdicionarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoAdicionarMouseExited
        paineis.componentSetEmptyBorder(jpBotaoAdicionar);
    }//GEN-LAST:event_jpBotaoAdicionarMouseExited

    private void jpBotaoPesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoPesquisarMouseClicked
        //Apenas o código do cliente pode ser pesquisado e verificado.
        campos.componentsSetEditable(jpCentro, false);
        jlCodigo.setVisible(true);
        jlCodigo.setEnabled(true);
        jtfCodigo.setVisible(true);
        jtfCodigo.setEditable(true);

        //Limita todos os botões, exceto o "Verificar" e "Cancelar".
        paineis.componentsSetVisible(jpSul, false);
        jpBotaoVerificar.setVisible(true);
        jpBotaoCancelar.setVisible(true);
    }//GEN-LAST:event_jpBotaoPesquisarMouseClicked

    private void jpBotaoPesquisarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoPesquisarMouseEntered
        paineis.componentSetLineBorderColor(jpBotaoPesquisar);
    }//GEN-LAST:event_jpBotaoPesquisarMouseEntered

    private void jpBotaoPesquisarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoPesquisarMouseExited
        paineis.componentSetEmptyBorder(jpBotaoPesquisar);
    }//GEN-LAST:event_jpBotaoPesquisarMouseExited

    private void jpBotaoEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoEditarMouseClicked
        //Permite editar tudo, exceto o código do produto atual.
        campos.componentsSetEditable(jpCentro, true);
        jtfCodigo.setEditable(false);

        //Limita todos os botões, exceto o "Cancelar" e o "Salvar".
        paineis.componentsSetVisible(jpSul, false);
        jpBotaoCancelar.setVisible(true);
        jpBotaoSalvar.setVisible(true);
    }//GEN-LAST:event_jpBotaoEditarMouseClicked

    private void jpBotaoEditarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoEditarMouseEntered
        paineis.componentSetLineBorderColor(jpBotaoEditar);
    }//GEN-LAST:event_jpBotaoEditarMouseEntered

    private void jpBotaoEditarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoEditarMouseExited
        paineis.componentSetEmptyBorder(jpBotaoEditar);
    }//GEN-LAST:event_jpBotaoEditarMouseExited

    private void jpBotaoDeletarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoDeletarMouseClicked
        //Confirma se o usuário quer de fato deletar o registro pesquisado.
        if (JOptionPane.showConfirmDialog(this, "Deseja deletar permanentemente as informações deste produto?", "Produtos - Botão Deletar", 0) == 0) {
            try {
                int codigoProduto = Integer.parseInt(jtfCodigo.getText());
                //Deleta os registros do cliente atual no Banco de Dados.
                if (DAO.deletarProduto(codigoProduto)) {
                    //Mensagem de sucesso para o usuário
                    JOptionPane.showMessageDialog(this, "Cadastro de produto deletado com sucesso!", "Produtos - Botão Deletar", JOptionPane.INFORMATION_MESSAGE);
                    //Após deletar, aplicar "Cancelar".
                    jpBotaoCancelarMouseClicked(evt);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Produtos - Botão Deletar", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jpBotaoDeletarMouseClicked

    private void jpBotaoDeletarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoDeletarMouseEntered
        paineis.componentSetLineBorderColor(jpBotaoDeletar);
    }//GEN-LAST:event_jpBotaoDeletarMouseEntered

    private void jpBotaoDeletarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoDeletarMouseExited
        paineis.componentSetEmptyBorder(jpBotaoDeletar);
    }//GEN-LAST:event_jpBotaoDeletarMouseExited

    private void jpBotaoVerificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoVerificarMouseClicked
        //Verifica se o código pesquisado é válido ou não. Caso seja, retornar as informações nos devidos campos e habilitar os botões "Editar" e "Deletar".
        try {
            int pesquisa = Integer.parseInt(jtfCodigo.getText());

            produto = DAO.pesquisarProduto(pesquisa);

            //Preenchendo a tela
            jtfNome.setText(produto.getNome());
            jtfReferencia.setText(produto.getReferencia());
            jtfMarca.setText(produto.getMarca());
            jtfPesquisa.setText(produto.getPesquisa());
            jtfDescricao.setText(produto.getDescricao());
            jtfMultiplo.setText(String.valueOf(produto.getMultiplo()));
            jtfPreco.setText(String.valueOf(produto.getPreco()));
            jtfQuantidade.setText(String.valueOf(produto.getQuantidade()));

            //Limita todos os botões, exceto o "Editar", "Deletar" e "Cancelar".
            paineis.componentsSetVisible(jpSul, false);
            jpBotaoEditar.setVisible(true);
            jpBotaoDeletar.setVisible(true);
            jpBotaoCancelar.setVisible(true);
            
            //Inclusive, limita de alterar o código de produto informado.
            jtfCodigo.setEditable(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Produtos - Botão Verificar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jpBotaoVerificarMouseClicked

    private void jpBotaoVerificarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoVerificarMouseEntered
        paineis.componentSetLineBorderColor(jpBotaoVerificar);
    }//GEN-LAST:event_jpBotaoVerificarMouseEntered

    private void jpBotaoVerificarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoVerificarMouseExited
        paineis.componentSetEmptyBorder(jpBotaoVerificar);
    }//GEN-LAST:event_jpBotaoVerificarMouseExited

    private void jpBotaoCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoCancelarMouseClicked
        //Como se estivesse abrindo a tela de novo. Porém, limpando todos os campos e sem o detalhe de forçar a seleção para o cliente físico.
        campos.componentsClearText(jpCentro);
        campos.componentsSetEditable(jpCentro, false);
        paineis.componentsSetVisible(jpSul, false);
        jlCodigo.setVisible(false);
        jtfCodigo.setVisible(false);
        jpBotaoAdicionar.setVisible(true);
        jpBotaoPesquisar.setVisible(true);
    }//GEN-LAST:event_jpBotaoCancelarMouseClicked

    private void jpBotaoCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoCancelarMouseEntered
        paineis.componentSetLineBorderColor(jpBotaoCancelar);
    }//GEN-LAST:event_jpBotaoCancelarMouseEntered

    private void jpBotaoCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoCancelarMouseExited
        paineis.componentSetEmptyBorder(jpBotaoCancelar);
    }//GEN-LAST:event_jpBotaoCancelarMouseExited

    private void jpBotaoSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoSalvarMouseClicked
        try {
            if (validarCampos()) {
                if (preencherObjeto(produto)) {
                    if (jlCodigo.isVisible() == false) { //Se trata de uma inserção no Banco de Dados
                        if (DAO.inserirProduto(produto)) {
                            JOptionPane.showMessageDialog(this, "Produto salvo com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                            //Limpa a tela após salvar com sucesso.
                            jpBotaoCancelarMouseClicked(evt);
                        } else {
                            throw new Exception("ao inserir produto");
                        }
                    } else {    //Se trata de uma atualização no Banco de Dados
                        int codigoProduto = Integer.parseInt(jtfCodigo.getText());
                        if (DAO.editarProduto(produto, codigoProduto)) {
                            JOptionPane.showMessageDialog(this, "Produto atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                            //Limpa a tela após salvar com sucesso.
                            jpBotaoCancelarMouseClicked(evt);
                        } else {
                            throw new Exception("ao atualizar produto");
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Produtos - Botão Salvar", JOptionPane.ERROR_MESSAGE);

            //Caso habilitado, o e.printStackTrace() vai trazer todos os erros e suas devidas linhas no console. Pode vir a ser interessante, caso haja algum bug.
            //e.printStackTrace();
        }
    }//GEN-LAST:event_jpBotaoSalvarMouseClicked

    private void jpBotaoSalvarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoSalvarMouseEntered
        paineis.componentSetLineBorderColor(jpBotaoSalvar);
    }//GEN-LAST:event_jpBotaoSalvarMouseEntered

    private void jpBotaoSalvarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpBotaoSalvarMouseExited
        paineis.componentSetEmptyBorder(jpBotaoSalvar);
    }//GEN-LAST:event_jpBotaoSalvarMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jlCodigo;
    private javax.swing.JLabel jlDescricao;
    private javax.swing.JLabel jlMarca;
    private javax.swing.JLabel jlMultiplo;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlPesquisa;
    private javax.swing.JLabel jlPreco;
    private javax.swing.JLabel jlQuantidade;
    private javax.swing.JLabel jlReferencia;
    private javax.swing.JPanel jpBotaoAdicionar;
    private javax.swing.JPanel jpBotaoCancelar;
    private javax.swing.JPanel jpBotaoDeletar;
    private javax.swing.JPanel jpBotaoEditar;
    private javax.swing.JPanel jpBotaoPesquisar;
    private javax.swing.JPanel jpBotaoSalvar;
    private javax.swing.JPanel jpBotaoVerificar;
    private javax.swing.JPanel jpCentro;
    private javax.swing.JPanel jpFechar;
    private javax.swing.JPanel jpNorte;
    private javax.swing.JPanel jpSul;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfDescricao;
    private javax.swing.JTextField jtfMarca;
    private javax.swing.JTextField jtfMultiplo;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfPreco;
    private javax.swing.JTextField jtfQuantidade;
    private javax.swing.JTextField jtfReferencia;
    // End of variables declaration//GEN-END:variables
    
    public boolean validarCampos() throws Exception {
        if (jtfNome.getText().trim().length() > 0 && jtfNome.getText().trim().length() <= 60) {
            if (jtfReferencia.getText().trim().length() > 0 && jtfReferencia.getText().trim().length() <= 60) {
                if (jtfMarca.getText().trim().length() > 0 && jtfMarca.getText().trim().length() <= 50) {
                    if (jtfPesquisa.getText().trim().length() >= 10 && jtfPesquisa.getText().trim().length() <= 13) {
                        if (jtfDescricao.getText().trim().length() > 0 && jtfDescricao.getText().trim().length() <= 300) {
                            try {
                                Integer.parseInt(jtfMultiplo.getText());
                            } catch (NumberFormatException e) {
                                throw new Exception("insira um número de múltiplos válido");
                            }
                            if (Integer.parseInt(jtfMultiplo.getText()) > 0) {
                                try {
                                    Integer.parseInt(jtfPreco.getText());
                                } catch (NumberFormatException e) {
                                    throw new Exception("insira um número de preço válido");
                                }
                                if (Integer.parseInt(jtfPreco.getText()) > 0) {
                                    try {
                                        Integer.parseInt(jtfQuantidade.getText());
                                    } catch (NumberFormatException e) {
                                        throw new Exception("insira um número de quantidade válido");
                                    }
                                    if (Integer.parseInt(jtfQuantidade.getText()) > 0) {
                                        return true;
                                    } else {
                                        jtfQuantidade.requestFocus();
                                        throw new Exception("a quantidade deve ser positiva");
                                    }
                                } else {
                                    jtfPreco.requestFocus();
                                    throw new Exception("o preço deve ser positivo");
                                }
                            } else {
                                jtfMultiplo.requestFocus();
                                throw new Exception("o múltiplo deve ser positivo");
                            }
                        } else {
                            jtfDescricao.requestFocus();
                            throw new Exception("a descrição deve conter pelo menos um e no máximo trezentos caracteres");
                        }
                    } else {
                        jtfPesquisa.requestFocus();
                        throw new Exception("a pesquisa deve conter pelo menos dez e no máximo treze caracteres; seguindo o formato 'VW.000.000.XX'");
                    }
                } else {
                    jtfMarca.requestFocus();
                    throw new Exception("a marca deve conter pelo menos um e no máximo cinquenta caracteres");
                }

            } else {
                jtfReferencia.requestFocus();
                throw new Exception("a referência deve conter pelo menos um e no máximo duzentos caracteres");
            }
        } else {
            jtfNome.requestFocus();
            throw new Exception("o nome deve conter pelo menos um e no máximo duzentos caracteres");
        }
    }

    public boolean preencherObjeto(Produto produto) throws Exception {
        produto.setNome(jtfNome.getText());
        produto.setReferencia(jtfReferencia.getText());
        produto.setMarca(jtfMarca.getText());
        produto.setPesquisa(jtfPesquisa.getText());
        produto.setDescricao(jtfDescricao.getText());
        produto.setMultiplo(Integer.parseInt(jtfMultiplo.getText()));
        produto.setPreco(Integer.parseInt(jtfPreco.getText()));
        produto.setQuantidade(Integer.parseInt(jtfQuantidade.getText()));
        
        return true;
    }

}
