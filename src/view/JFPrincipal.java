package view;

import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import utils.*;

public class JFPrincipal extends javax.swing.JFrame {
    private Paineis paineis;

    /**
     * Creates new form JFPrincipal
     */
    public JFPrincipal() {
        initComponents();
        paineis = new Paineis();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jpPainelLateral = new javax.swing.JPanel();
        jpMenus = new javax.swing.JPanel();
        ImageIcon iconClientes = new ImageIcon(getClass().getResource("/images/JFPrincipal/Clientes.png"));
        Image clientes = iconClientes.getImage();
        jpClientes = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(clientes, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconPedidos = new ImageIcon(getClass().getResource("/images/JFPrincipal/Pedidos.png"));
        Image pedidos = iconPedidos.getImage();
        jpPedidos = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(pedidos, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconProdutos = new ImageIcon(getClass().getResource("/images/JFPrincipal/Produtos.png"));
        Image produtos = iconProdutos.getImage();
        jpProdutos = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(produtos, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconVendas = new ImageIcon(getClass().getResource("/images/JFPrincipal/Vendas.png"));
        Image vendas = iconVendas.getImage();
        jpVendas = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(vendas, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconRelatorios = new ImageIcon(getClass().getResource("/images/JFPrincipal/Relatorios.png"));
        Image relatorios = iconRelatorios.getImage();
        jpRelatorios = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                g.drawImage(relatorios, 0, 0, getWidth(), getHeight(), this);
            }
        };
        ImageIcon iconPrincipal = new ImageIcon(getClass().getResource("/images/JFPrincipal/Background.png"));
        Image principal = iconPrincipal.getImage();
        jdpPrincipal = new javax.swing.JDesktopPane() {
            public void paintComponent(Graphics g) {
                g.drawImage(principal, 0, 0, getWidth(), getHeight(), this);
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setSize(new java.awt.Dimension(1280, 720));

        jpPainelLateral.setBackground(new java.awt.Color(0, 146, 255));
        jpPainelLateral.setMinimumSize(new java.awt.Dimension(0, 0));
        jpPainelLateral.setPreferredSize(new java.awt.Dimension(128, 720));
        jpPainelLateral.setLayout(new java.awt.GridBagLayout());

        jpMenus.setBackground(new java.awt.Color(0, 146, 255));
        jpMenus.setMinimumSize(new java.awt.Dimension(128, 480));
        jpMenus.setPreferredSize(new java.awt.Dimension(128, 720));
        jpMenus.setLayout(new java.awt.GridBagLayout());

        jpClientes.setBackground(new java.awt.Color(41, 98, 255));
        jpClientes.setMaximumSize(new java.awt.Dimension(128, 72));
        jpClientes.setMinimumSize(new java.awt.Dimension(128, 72));
        jpClientes.setPreferredSize(new java.awt.Dimension(128, 72));
        jpClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpClientesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpClientesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpClientesMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpClientesLayout = new javax.swing.GroupLayout(jpClientes);
        jpClientes.setLayout(jpClientesLayout);
        jpClientesLayout.setHorizontalGroup(
            jpClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        jpClientesLayout.setVerticalGroup(
            jpClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jpMenus.add(jpClientes, gridBagConstraints);

        jpPedidos.setBackground(new java.awt.Color(41, 98, 255));
        jpPedidos.setMaximumSize(new java.awt.Dimension(128, 72));
        jpPedidos.setMinimumSize(new java.awt.Dimension(128, 72));
        jpPedidos.setPreferredSize(new java.awt.Dimension(128, 72));
        jpPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpPedidosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpPedidosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpPedidosMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpPedidosLayout = new javax.swing.GroupLayout(jpPedidos);
        jpPedidos.setLayout(jpPedidosLayout);
        jpPedidosLayout.setHorizontalGroup(
            jpPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        jpPedidosLayout.setVerticalGroup(
            jpPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jpMenus.add(jpPedidos, gridBagConstraints);

        jpProdutos.setBackground(new java.awt.Color(41, 98, 255));
        jpProdutos.setMaximumSize(new java.awt.Dimension(128, 72));
        jpProdutos.setMinimumSize(new java.awt.Dimension(128, 72));
        jpProdutos.setPreferredSize(new java.awt.Dimension(128, 72));
        jpProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpProdutosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpProdutosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpProdutosMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpProdutosLayout = new javax.swing.GroupLayout(jpProdutos);
        jpProdutos.setLayout(jpProdutosLayout);
        jpProdutosLayout.setHorizontalGroup(
            jpProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        jpProdutosLayout.setVerticalGroup(
            jpProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jpMenus.add(jpProdutos, gridBagConstraints);

        jpVendas.setBackground(new java.awt.Color(41, 98, 255));
        jpVendas.setMaximumSize(new java.awt.Dimension(128, 72));
        jpVendas.setMinimumSize(new java.awt.Dimension(128, 72));
        jpVendas.setPreferredSize(new java.awt.Dimension(128, 72));
        jpVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpVendasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpVendasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpVendasMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpVendasLayout = new javax.swing.GroupLayout(jpVendas);
        jpVendas.setLayout(jpVendasLayout);
        jpVendasLayout.setHorizontalGroup(
            jpVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        jpVendasLayout.setVerticalGroup(
            jpVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jpMenus.add(jpVendas, gridBagConstraints);

        jpRelatorios.setBackground(new java.awt.Color(41, 98, 255));
        jpRelatorios.setMaximumSize(new java.awt.Dimension(128, 72));
        jpRelatorios.setMinimumSize(new java.awt.Dimension(128, 72));
        jpRelatorios.setPreferredSize(new java.awt.Dimension(128, 72));
        jpRelatorios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpRelatoriosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jpRelatoriosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jpRelatoriosMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpRelatoriosLayout = new javax.swing.GroupLayout(jpRelatorios);
        jpRelatorios.setLayout(jpRelatoriosLayout);
        jpRelatoriosLayout.setHorizontalGroup(
            jpRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        jpRelatoriosLayout.setVerticalGroup(
            jpRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jpMenus.add(jpRelatorios, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        jpPainelLateral.add(jpMenus, gridBagConstraints);

        getContentPane().add(jpPainelLateral, java.awt.BorderLayout.WEST);

        jdpPrincipal.setBackground(new java.awt.Color(255, 109, 0));
        jdpPrincipal.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                jdpPrincipalComponentRemoved(evt);
            }
        });

        javax.swing.GroupLayout jdpPrincipalLayout = new javax.swing.GroupLayout(jdpPrincipal);
        jdpPrincipal.setLayout(jdpPrincipalLayout);
        jdpPrincipalLayout.setHorizontalGroup(
            jdpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1152, Short.MAX_VALUE)
        );
        jdpPrincipalLayout.setVerticalGroup(
            jdpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        getContentPane().add(jdpPrincipal, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jpClientesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpClientesMouseEntered
        paineis.componentSetLineBorderColor(jpClientes);
    }//GEN-LAST:event_jpClientesMouseEntered

    private void jpClientesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpClientesMouseExited
        paineis.componentSetEmptyBorder(jpClientes);
    }//GEN-LAST:event_jpClientesMouseExited

    private void jpPedidosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpPedidosMouseEntered
        paineis.componentSetLineBorderColor(jpPedidos);
    }//GEN-LAST:event_jpPedidosMouseEntered

    private void jpPedidosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpPedidosMouseExited
        paineis.componentSetEmptyBorder(jpPedidos);
    }//GEN-LAST:event_jpPedidosMouseExited

    private void jpProdutosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpProdutosMouseEntered
        paineis.componentSetLineBorderColor(jpProdutos);
    }//GEN-LAST:event_jpProdutosMouseEntered

    private void jpProdutosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpProdutosMouseExited
        paineis.componentSetEmptyBorder(jpProdutos);
    }//GEN-LAST:event_jpProdutosMouseExited

    private void jpVendasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpVendasMouseEntered
        paineis.componentSetLineBorderColor(jpVendas);
    }//GEN-LAST:event_jpVendasMouseEntered

    private void jpVendasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpVendasMouseExited
        paineis.componentSetEmptyBorder(jpVendas);
    }//GEN-LAST:event_jpVendasMouseExited

    private void jpRelatoriosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpRelatoriosMouseEntered
        paineis.componentSetLineBorderColor(jpRelatorios);
    }//GEN-LAST:event_jpRelatoriosMouseEntered

    private void jpRelatoriosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpRelatoriosMouseExited
        paineis.componentSetEmptyBorder(jpRelatorios);
    }//GEN-LAST:event_jpRelatoriosMouseExited

    private void jpClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpClientesMouseClicked
        jdpPrincipal.removeAll();
        jdpPrincipal.repaint();
        JIFClientes janela = new JIFClientes();
        janela.setVisible(true);        
        jdpPrincipal.add(janela);
        try {
            janela.setMaximum(true);
        } catch (Exception e) {
            System.err.println("Erro de setMaximum no JFPrincipal");
        }
    }//GEN-LAST:event_jpClientesMouseClicked

    private void jpPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpPedidosMouseClicked
        jdpPrincipal.removeAll();
        jdpPrincipal.repaint();
        JIFPedidos janela = new JIFPedidos();
        janela.setVisible(true);
        jdpPrincipal.add(janela);
        try {
            janela.setMaximum(true);
        } catch (Exception e) {
            System.err.println("Erro de setMaximum no JFPrincipal");
        }
    }//GEN-LAST:event_jpPedidosMouseClicked

    private void jpProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpProdutosMouseClicked
        jdpPrincipal.removeAll();
        jdpPrincipal.repaint();
        JIFProdutos janela = new JIFProdutos();
        janela.setVisible(true);
        jdpPrincipal.add(janela);
        try {
            janela.setMaximum(true);
        } catch (Exception e) {
            System.err.println("Erro de setMaximum no JFPrincipal");
        }
    }//GEN-LAST:event_jpProdutosMouseClicked

    private void jpVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpVendasMouseClicked
        jdpPrincipal.removeAll();
        jdpPrincipal.repaint();
        
        //Extende o tamanho da tela de Vendas. O evento "jdpPrincipalComponentRemoved" restaura os tamanhos padrão.
        jpPainelLateral.setVisible(false);
        jdpPrincipal.setSize(1280, 720);
        
        JIFVendas janela = new JIFVendas();
        janela.setVisible(true);
        jdpPrincipal.add(janela);
        try {
            janela.setMaximum(true);
        } catch (Exception e) {
            System.err.println("Erro de setMaximum no JFPrincipal");
        }
    }//GEN-LAST:event_jpVendasMouseClicked

    private void jpRelatoriosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpRelatoriosMouseClicked
        jdpPrincipal.removeAll();
        jdpPrincipal.repaint();
        JIFRelatorios janela = new JIFRelatorios();
        janela.setVisible(true);
        jdpPrincipal.add(janela);
        try {
            janela.setMaximum(true);
        } catch (Exception e) {
            System.err.println("Erro de setMaximum no JFPrincipal");
        }
    }//GEN-LAST:event_jpRelatoriosMouseClicked

    private void jdpPrincipalComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jdpPrincipalComponentRemoved
        jdpPrincipal.setSize(1152, 720);
        jpPainelLateral.setVisible(true);
        jdpPrincipal.repaint();
    }//GEN-LAST:event_jdpPrincipalComponentRemoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatLightLaf.install();

        try {
            javax.swing.UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JDesktopPane jdpPrincipal;
    private javax.swing.JPanel jpClientes;
    private javax.swing.JPanel jpMenus;
    public javax.swing.JPanel jpPainelLateral;
    private javax.swing.JPanel jpPedidos;
    private javax.swing.JPanel jpProdutos;
    private javax.swing.JPanel jpRelatorios;
    private javax.swing.JPanel jpVendas;
    // End of variables declaration//GEN-END:variables
}